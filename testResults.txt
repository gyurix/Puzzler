============================= test session starts =============================
platform win32 -- Python 3.7.2, pytest-4.3.0, py-1.8.0, pluggy-0.9.0 -- C:\Users\Gyurix\AppData\Local\Programs\Python\Python37\python.exe
cachedir: .pytest_cache
rootdir: D:\Mega\STU\UI\Puzzler, inifile:
collecting ... collected 19 items

tests.py::test_state_to_string PASSED                                    [  5%]
tests.py::test_operation_up PASSED                                       [ 10%]
tests.py::test_operation_down PASSED                                     [ 15%]
tests.py::test_operation_right PASSED                                    [ 21%]
tests.py::test_operation_left PASSED                                     [ 26%]
tests.py::test_equals PASSED                                             [ 31%]
tests.py::test_dif_calc_incorrect_ep PASSED                              [ 36%]
tests.py::test_dif_calc_dist_from_correct_ep PASSED                      [ 42%]
tests.py::test_a_star_same PASSED                                        [ 47%]
tests.py::test_a_star_one_step PASSED                                    [ 52%]
tests.py::test_a_star_two_step PASSED                                    [ 57%]
tests.py::test_a_star_3x2_dc1 PASSED                                     [ 63%]
Path len = 22
 0. ((m 1 2)(3 4 5))
 1. ((3 1 2)(m 4 5))
 2. ((3 1 2)(4 m 5))
 3. ((3 m 2)(4 1 5))
 4. ((3 2 m)(4 1 5))
 5. ((3 2 5)(4 1 m))
 6. ((3 2 5)(4 m 1))
 7. ((3 2 5)(m 4 1))
 8. ((m 2 5)(3 4 1))
 9. ((2 m 5)(3 4 1))
10. ((2 4 5)(3 m 1))
11. ((2 4 5)(3 1 m))
12. ((2 4 m)(3 1 5))
13. ((2 m 4)(3 1 5))
14. ((m 2 4)(3 1 5))
15. ((3 2 4)(m 1 5))
16. ((3 2 4)(1 m 5))
17. ((3 m 4)(1 2 5))
18. ((3 4 m)(1 2 5))
19. ((3 4 5)(1 2 m))
20. ((3 4 5)(1 m 2))
21. ((3 4 5)(m 1 2))

tests.py::test_a_star_3x2_dc2 PASSED                                     [ 68%]
Path len = 22
 0. ((m 1 2)(3 4 5))
 1. ((3 1 2)(m 4 5))
 2. ((3 1 2)(4 m 5))
 3. ((3 m 2)(4 1 5))
 4. ((3 2 m)(4 1 5))
 5. ((3 2 5)(4 1 m))
 6. ((3 2 5)(4 m 1))
 7. ((3 2 5)(m 4 1))
 8. ((m 2 5)(3 4 1))
 9. ((2 m 5)(3 4 1))
10. ((2 4 5)(3 m 1))
11. ((2 4 5)(3 1 m))
12. ((2 4 m)(3 1 5))
13. ((2 m 4)(3 1 5))
14. ((m 2 4)(3 1 5))
15. ((3 2 4)(m 1 5))
16. ((3 2 4)(1 m 5))
17. ((3 m 4)(1 2 5))
18. ((3 4 m)(1 2 5))
19. ((3 4 5)(1 2 m))
20. ((3 4 5)(1 m 2))
21. ((3 4 5)(m 1 2))

tests.py::test_a_star_4x2_dc1 PASSED                                     [ 73%]
Path len = 37
 0. ((m 1 2 3)(4 5 6 7))
 1. ((4 1 2 3)(m 5 6 7))
 2. ((4 1 2 3)(5 m 6 7))
 3. ((4 1 2 3)(5 6 m 7))
 4. ((4 1 2 3)(5 6 7 m))
 5. ((4 1 2 m)(5 6 7 3))
 6. ((4 1 m 2)(5 6 7 3))
 7. ((4 m 1 2)(5 6 7 3))
 8. ((m 4 1 2)(5 6 7 3))
 9. ((5 4 1 2)(m 6 7 3))
10. ((5 4 1 2)(6 m 7 3))
11. ((5 4 1 2)(6 7 m 3))
12. ((5 4 1 2)(6 7 3 m))
13. ((5 4 1 m)(6 7 3 2))
14. ((5 4 m 1)(6 7 3 2))
15. ((5 m 4 1)(6 7 3 2))
16. ((5 7 4 1)(6 m 3 2))
17. ((5 7 4 1)(m 6 3 2))
18. ((m 7 4 1)(5 6 3 2))
19. ((7 m 4 1)(5 6 3 2))
20. ((7 6 4 1)(5 m 3 2))
21. ((7 6 4 1)(5 3 m 2))
22. ((7 6 4 1)(5 3 2 m))
23. ((7 6 4 m)(5 3 2 1))
24. ((7 6 m 4)(5 3 2 1))
25. ((7 m 6 4)(5 3 2 1))
26. ((7 3 6 4)(5 m 2 1))
27. ((7 3 6 4)(m 5 2 1))
28. ((m 3 6 4)(7 5 2 1))
29. ((3 m 6 4)(7 5 2 1))
30. ((3 6 m 4)(7 5 2 1))
31. ((3 6 2 4)(7 5 m 1))
32. ((3 6 2 4)(7 m 5 1))
33. ((3 m 2 4)(7 6 5 1))
34. ((3 2 m 4)(7 6 5 1))
35. ((3 2 5 4)(7 6 m 1))
36. ((3 2 5 4)(7 6 1 m))

tests.py::test_a_star_4x2_dc2 PASSED                                     [ 78%]
Path len = 37
 0. ((m 1 2 3)(4 5 6 7))
 1. ((1 m 2 3)(4 5 6 7))
 2. ((1 2 m 3)(4 5 6 7))
 3. ((1 2 6 3)(4 5 m 7))
 4. ((1 2 6 3)(4 5 7 m))
 5. ((1 2 6 m)(4 5 7 3))
 6. ((1 2 m 6)(4 5 7 3))
 7. ((1 2 7 6)(4 5 m 3))
 8. ((1 2 7 6)(4 m 5 3))
 9. ((1 2 7 6)(m 4 5 3))
10. ((m 2 7 6)(1 4 5 3))
11. ((2 m 7 6)(1 4 5 3))
12. ((2 7 m 6)(1 4 5 3))
13. ((2 7 6 m)(1 4 5 3))
14. ((2 7 6 3)(1 4 5 m))
15. ((2 7 6 3)(1 4 m 5))
16. ((2 7 6 3)(1 m 4 5))
17. ((2 7 6 3)(m 1 4 5))
18. ((m 7 6 3)(2 1 4 5))
19. ((7 m 6 3)(2 1 4 5))
20. ((7 6 m 3)(2 1 4 5))
21. ((7 6 3 m)(2 1 4 5))
22. ((7 6 3 5)(2 1 4 m))
23. ((7 6 3 5)(2 1 m 4))
24. ((7 6 3 5)(2 m 1 4))
25. ((7 m 3 5)(2 6 1 4))
26. ((7 3 m 5)(2 6 1 4))
27. ((7 3 5 m)(2 6 1 4))
28. ((7 3 5 4)(2 6 1 m))
29. ((7 3 5 4)(2 6 m 1))
30. ((7 3 5 4)(2 m 6 1))
31. ((7 3 5 4)(m 2 6 1))
32. ((m 3 5 4)(7 2 6 1))
33. ((3 m 5 4)(7 2 6 1))
34. ((3 2 5 4)(7 m 6 1))
35. ((3 2 5 4)(7 6 m 1))
36. ((3 2 5 4)(7 6 1 m))

tests.py::test_a_star_3x3_dc1 PASSED                                     [ 84%]
Path len = 32
 0. ((m 1 2)(3 4 5)(6 7 8))
 1. ((3 1 2)(m 4 5)(6 7 8))
 2. ((3 1 2)(4 m 5)(6 7 8))
 3. ((3 m 2)(4 1 5)(6 7 8))
 4. ((3 2 m)(4 1 5)(6 7 8))
 5. ((3 2 5)(4 1 m)(6 7 8))
 6. ((3 2 5)(4 1 8)(6 7 m))
 7. ((3 2 5)(4 1 8)(6 m 7))
 8. ((3 2 5)(4 m 8)(6 1 7))
 9. ((3 2 5)(m 4 8)(6 1 7))
10. ((m 2 5)(3 4 8)(6 1 7))
11. ((2 m 5)(3 4 8)(6 1 7))
12. ((2 5 m)(3 4 8)(6 1 7))
13. ((2 5 8)(3 4 m)(6 1 7))
14. ((2 5 8)(3 4 7)(6 1 m))
15. ((2 5 8)(3 4 7)(6 m 1))
16. ((2 5 8)(3 4 7)(m 6 1))
17. ((2 5 8)(m 4 7)(3 6 1))
18. ((m 5 8)(2 4 7)(3 6 1))
19. ((5 m 8)(2 4 7)(3 6 1))
20. ((5 8 m)(2 4 7)(3 6 1))
21. ((5 8 7)(2 4 m)(3 6 1))
22. ((5 8 7)(2 m 4)(3 6 1))
23. ((5 8 7)(2 6 4)(3 m 1))
24. ((5 8 7)(2 6 4)(m 3 1))
25. ((5 8 7)(m 6 4)(2 3 1))
26. ((m 8 7)(5 6 4)(2 3 1))
27. ((8 m 7)(5 6 4)(2 3 1))
28. ((8 6 7)(5 m 4)(2 3 1))
29. ((8 6 7)(5 4 m)(2 3 1))
30. ((8 6 m)(5 4 7)(2 3 1))
31. ((8 m 6)(5 4 7)(2 3 1))

tests.py::test_a_star_3x3_dc2 PASSED                                     [ 89%]
Path len = 32
 0. ((m 1 2)(3 4 5)(6 7 8))
 1. ((3 1 2)(m 4 5)(6 7 8))
 2. ((3 1 2)(4 m 5)(6 7 8))
 3. ((3 m 2)(4 1 5)(6 7 8))
 4. ((3 2 m)(4 1 5)(6 7 8))
 5. ((3 2 5)(4 1 m)(6 7 8))
 6. ((3 2 5)(4 1 8)(6 7 m))
 7. ((3 2 5)(4 1 8)(6 m 7))
 8. ((3 2 5)(4 m 8)(6 1 7))
 9. ((3 2 5)(m 4 8)(6 1 7))
10. ((m 2 5)(3 4 8)(6 1 7))
11. ((2 m 5)(3 4 8)(6 1 7))
12. ((2 5 m)(3 4 8)(6 1 7))
13. ((2 5 8)(3 4 m)(6 1 7))
14. ((2 5 8)(3 4 7)(6 1 m))
15. ((2 5 8)(3 4 7)(6 m 1))
16. ((2 5 8)(3 4 7)(m 6 1))
17. ((2 5 8)(m 4 7)(3 6 1))
18. ((m 5 8)(2 4 7)(3 6 1))
19. ((5 m 8)(2 4 7)(3 6 1))
20. ((5 8 m)(2 4 7)(3 6 1))
21. ((5 8 7)(2 4 m)(3 6 1))
22. ((5 8 7)(2 m 4)(3 6 1))
23. ((5 8 7)(2 6 4)(3 m 1))
24. ((5 8 7)(2 6 4)(m 3 1))
25. ((5 8 7)(m 6 4)(2 3 1))
26. ((m 8 7)(5 6 4)(2 3 1))
27. ((8 m 7)(5 6 4)(2 3 1))
28. ((8 6 7)(5 m 4)(2 3 1))
29. ((8 6 7)(5 4 m)(2 3 1))
30. ((8 6 m)(5 4 7)(2 3 1))
31. ((8 m 6)(5 4 7)(2 3 1))

tests.py::test_a_star_5x2_dc1 PASSED                                     [ 94%]
Path len = 56
 0. ((m 1 2 3 4)(5 6 7 8 9))
 1. ((5 1 2 3 4)(m 6 7 8 9))
 2. ((5 1 2 3 4)(6 m 7 8 9))
 3. ((5 m 2 3 4)(6 1 7 8 9))
 4. ((5 2 m 3 4)(6 1 7 8 9))
 5. ((5 2 3 m 4)(6 1 7 8 9))
 6. ((5 2 3 4 m)(6 1 7 8 9))
 7. ((5 2 3 4 9)(6 1 7 8 m))
 8. ((5 2 3 4 9)(6 1 7 m 8))
 9. ((5 2 3 4 9)(6 1 m 7 8))
10. ((5 2 3 4 9)(6 m 1 7 8))
11. ((5 m 3 4 9)(6 2 1 7 8))
12. ((5 3 m 4 9)(6 2 1 7 8))
13. ((5 3 4 m 9)(6 2 1 7 8))
14. ((5 3 4 9 m)(6 2 1 7 8))
15. ((5 3 4 9 8)(6 2 1 7 m))
16. ((5 3 4 9 8)(6 2 1 m 7))
17. ((5 3 4 9 8)(6 2 m 1 7))
18. ((5 3 m 9 8)(6 2 4 1 7))
19. ((5 m 3 9 8)(6 2 4 1 7))
20. ((m 5 3 9 8)(6 2 4 1 7))
21. ((6 5 3 9 8)(m 2 4 1 7))
22. ((6 5 3 9 8)(2 m 4 1 7))
23. ((6 5 3 9 8)(2 4 m 1 7))
24. ((6 5 m 9 8)(2 4 3 1 7))
25. ((6 5 9 m 8)(2 4 3 1 7))
26. ((6 5 9 8 m)(2 4 3 1 7))
27. ((6 5 9 8 7)(2 4 3 1 m))
28. ((6 5 9 8 7)(2 4 3 m 1))
29. ((6 5 9 8 7)(2 4 m 3 1))
30. ((6 5 m 8 7)(2 4 9 3 1))
31. ((6 m 5 8 7)(2 4 9 3 1))
32. ((m 6 5 8 7)(2 4 9 3 1))
33. ((2 6 5 8 7)(m 4 9 3 1))
34. ((2 6 5 8 7)(4 m 9 3 1))
35. ((2 6 5 8 7)(4 9 m 3 1))
36. ((2 6 5 8 7)(4 9 3 m 1))
37. ((2 6 5 m 7)(4 9 3 8 1))
38. ((2 6 m 5 7)(4 9 3 8 1))
39. ((2 m 6 5 7)(4 9 3 8 1))
40. ((m 2 6 5 7)(4 9 3 8 1))
41. ((4 2 6 5 7)(m 9 3 8 1))
42. ((4 2 6 5 7)(9 m 3 8 1))
43. ((4 2 6 5 7)(9 3 m 8 1))
44. ((4 2 6 5 7)(9 3 8 m 1))
45. ((4 2 6 m 7)(9 3 8 5 1))
46. ((4 2 6 7 m)(9 3 8 5 1))
47. ((4 2 6 7 1)(9 3 8 5 m))
48. ((4 2 6 7 1)(9 3 8 m 5))
49. ((4 2 6 m 1)(9 3 8 7 5))
50. ((4 2 m 6 1)(9 3 8 7 5))
51. ((4 m 2 6 1)(9 3 8 7 5))
52. ((4 3 2 6 1)(9 m 8 7 5))
53. ((4 3 2 6 1)(9 8 m 7 5))
54. ((4 3 2 6 1)(9 8 7 m 5))
55. ((4 3 2 6 1)(9 8 7 5 m))

tests.py::test_a_star_5x2_dc2 PASSED                                     [100%]
Path len = 56
 0. ((m 1 2 3 4)(5 6 7 8 9))
 1. ((5 1 2 3 4)(m 6 7 8 9))
 2. ((5 1 2 3 4)(6 m 7 8 9))
 3. ((5 1 2 3 4)(6 7 m 8 9))
 4. ((5 1 2 3 4)(6 7 8 m 9))
 5. ((5 1 2 3 4)(6 7 8 9 m))
 6. ((5 1 2 3 m)(6 7 8 9 4))
 7. ((5 1 2 m 3)(6 7 8 9 4))
 8. ((5 1 m 2 3)(6 7 8 9 4))
 9. ((5 m 1 2 3)(6 7 8 9 4))
10. ((5 7 1 2 3)(6 m 8 9 4))
11. ((5 7 1 2 3)(6 8 m 9 4))
12. ((5 7 1 2 3)(6 8 9 m 4))
13. ((5 7 1 2 3)(6 8 9 4 m))
14. ((5 7 1 2 m)(6 8 9 4 3))
15. ((5 7 1 m 2)(6 8 9 4 3))
16. ((5 7 m 1 2)(6 8 9 4 3))
17. ((5 7 9 1 2)(6 8 m 4 3))
18. ((5 7 9 1 2)(6 m 8 4 3))
19. ((5 7 9 1 2)(m 6 8 4 3))
20. ((m 7 9 1 2)(5 6 8 4 3))
21. ((7 m 9 1 2)(5 6 8 4 3))
22. ((7 9 m 1 2)(5 6 8 4 3))
23. ((7 9 8 1 2)(5 6 m 4 3))
24. ((7 9 8 1 2)(5 6 4 m 3))
25. ((7 9 8 1 2)(5 6 4 3 m))
26. ((7 9 8 1 m)(5 6 4 3 2))
27. ((7 9 8 m 1)(5 6 4 3 2))
28. ((7 9 m 8 1)(5 6 4 3 2))
29. ((7 9 4 8 1)(5 6 m 3 2))
30. ((7 9 4 8 1)(5 m 6 3 2))
31. ((7 9 4 8 1)(m 5 6 3 2))
32. ((m 9 4 8 1)(7 5 6 3 2))
33. ((9 m 4 8 1)(7 5 6 3 2))
34. ((9 4 m 8 1)(7 5 6 3 2))
35. ((9 4 8 m 1)(7 5 6 3 2))
36. ((9 4 8 3 1)(7 5 6 m 2))
37. ((9 4 8 3 1)(7 5 m 6 2))
38. ((9 4 8 3 1)(7 m 5 6 2))
39. ((9 4 8 3 1)(m 7 5 6 2))
40. ((m 4 8 3 1)(9 7 5 6 2))
41. ((4 m 8 3 1)(9 7 5 6 2))
42. ((4 8 m 3 1)(9 7 5 6 2))
43. ((4 8 3 m 1)(9 7 5 6 2))
44. ((4 8 3 6 1)(9 7 5 m 2))
45. ((4 8 3 6 1)(9 7 5 2 m))
46. ((4 8 3 6 m)(9 7 5 2 1))
47. ((4 8 3 m 6)(9 7 5 2 1))
48. ((4 8 3 2 6)(9 7 5 m 1))
49. ((4 8 3 2 6)(9 7 m 5 1))
50. ((4 8 3 2 6)(9 m 7 5 1))
51. ((4 m 3 2 6)(9 8 7 5 1))
52. ((4 3 m 2 6)(9 8 7 5 1))
53. ((4 3 2 m 6)(9 8 7 5 1))
54. ((4 3 2 6 m)(9 8 7 5 1))
55. ((4 3 2 6 1)(9 8 7 5 m))


========================= 19 passed in 170.25 seconds =========================
Process finished with exit code 0
